//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntityDataContext : DbContext
    {
        public EntityDataContext()
            : base("name=EntityDataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountModel> AccountModel { get; set; }
        public virtual DbSet<AM_AccountModel> AM_AccountModel { get; set; }
        public virtual DbSet<AM_AccountTypeModel> AM_AccountTypeModel { get; set; }
        public virtual DbSet<AM_ContactItemTypeModel> AM_ContactItemTypeModel { get; set; }
        public virtual DbSet<AM_DebtModel> AM_DebtModel { get; set; }
        public virtual DbSet<AM_TransactionModel> AM_TransactionModel { get; set; }
        public virtual DbSet<AM_TransactionTypeModel> AM_TransactionTypeModel { get; set; }
        public virtual DbSet<AY_SMSCalendar> AY_SMSCalendar { get; set; }
        public virtual DbSet<BranchModel> BranchModel { get; set; }
        public virtual DbSet<CalendarModel> CalendarModel { get; set; }
        public virtual DbSet<CategoryModel> CategoryModel { get; set; }
        public virtual DbSet<CourseModel> CourseModel { get; set; }
        public virtual DbSet<CRM_EmailParameterModel> CRM_EmailParameterModel { get; set; }
        public virtual DbSet<CRM_EmailTemplateModel> CRM_EmailTemplateModel { get; set; }
        public virtual DbSet<CRM_ObjectModel> CRM_ObjectModel { get; set; }
        public virtual DbSet<CRM_PeriodModel> CRM_PeriodModel { get; set; }
        public virtual DbSet<CRM_Remider_EmailParameter_Mapping> CRM_Remider_EmailParameter_Mapping { get; set; }
        public virtual DbSet<CRM_Remider_SMSParameter_Mapping> CRM_Remider_SMSParameter_Mapping { get; set; }
        public virtual DbSet<CRM_RemiderAUTOTypeModel> CRM_RemiderAUTOTypeModel { get; set; }
        public virtual DbSet<CRM_RemiderModel> CRM_RemiderModel { get; set; }
        public virtual DbSet<CRM_RemiderValueTypeModel> CRM_RemiderValueTypeModel { get; set; }
        public virtual DbSet<CRM_SMSParameterModel> CRM_SMSParameterModel { get; set; }
        public virtual DbSet<CRM_SMSTemplateModel> CRM_SMSTemplateModel { get; set; }
        public virtual DbSet<CurrencyModel> CurrencyModel { get; set; }
        public virtual DbSet<CustomerLevelModel> CustomerLevelModel { get; set; }
        public virtual DbSet<CustomerModel> CustomerModel { get; set; }
        public virtual DbSet<Daily_ChicCut_OrderDetailModel> Daily_ChicCut_OrderDetailModel { get; set; }
        public virtual DbSet<Daily_ChicCut_OrderModel> Daily_ChicCut_OrderModel { get; set; }
        public virtual DbSet<Daily_ChicCut_OrderProductDetailModel> Daily_ChicCut_OrderProductDetailModel { get; set; }
        public virtual DbSet<Daily_ChicCut_OrderStatusModel> Daily_ChicCut_OrderStatusModel { get; set; }
        public virtual DbSet<Daily_ChicCut_Pre_DayOffModel> Daily_ChicCut_Pre_DayOffModel { get; set; }
        public virtual DbSet<Daily_ChicCut_Pre_OrderDetailModel> Daily_ChicCut_Pre_OrderDetailModel { get; set; }
        public virtual DbSet<Daily_ChicCut_Pre_OrderModel> Daily_ChicCut_Pre_OrderModel { get; set; }
        public virtual DbSet<Daily_ChicCut_Pre_SettingModel> Daily_ChicCut_Pre_SettingModel { get; set; }
        public virtual DbSet<Daily_ChicCut_Pre_ShiftModel> Daily_ChicCut_Pre_ShiftModel { get; set; }
        public virtual DbSet<Daily_ChicCut_WorkingDateModel> Daily_ChicCut_WorkingDateModel { get; set; }
        public virtual DbSet<Daily_ChicCut_WorkingTimeModel> Daily_ChicCut_WorkingTimeModel { get; set; }
        public virtual DbSet<DiscountModel> DiscountModel { get; set; }
        public virtual DbSet<DiscountTypeModel> DiscountTypeModel { get; set; }
        public virtual DbSet<DistrictModel> DistrictModel { get; set; }
        public virtual DbSet<EmployeeModel> EmployeeModel { get; set; }
        public virtual DbSet<ExchangeRateModel> ExchangeRateModel { get; set; }
        public virtual DbSet<IEOtherDetailModel> IEOtherDetailModel { get; set; }
        public virtual DbSet<IEOtherMasterModel> IEOtherMasterModel { get; set; }
        public virtual DbSet<ImportDetailModel> ImportDetailModel { get; set; }
        public virtual DbSet<ImportMasterModel> ImportMasterModel { get; set; }
        public virtual DbSet<InventoryDetailModel> InventoryDetailModel { get; set; }
        public virtual DbSet<InventoryMasterModel> InventoryMasterModel { get; set; }
        public virtual DbSet<InventoryTypeModel> InventoryTypeModel { get; set; }
        public virtual DbSet<LanguageModel> LanguageModel { get; set; }
        public virtual DbSet<LocationModel> LocationModel { get; set; }
        public virtual DbSet<LocationOfProductModel> LocationOfProductModel { get; set; }
        public virtual DbSet<ManualDiscountTypeModel> ManualDiscountTypeModel { get; set; }
        public virtual DbSet<Master_ChicCut_HairTypeModel> Master_ChicCut_HairTypeModel { get; set; }
        public virtual DbSet<Master_ChicCut_QuantificationDetailModel> Master_ChicCut_QuantificationDetailModel { get; set; }
        public virtual DbSet<Master_ChicCut_QuantificationMasterModel> Master_ChicCut_QuantificationMasterModel { get; set; }
        public virtual DbSet<Master_ChicCut_ServiceCategoryModel> Master_ChicCut_ServiceCategoryModel { get; set; }
        public virtual DbSet<Master_ChicCut_ServiceModel> Master_ChicCut_ServiceModel { get; set; }
        public virtual DbSet<MenuLanguageModel> MenuLanguageModel { get; set; }
        public virtual DbSet<MenuModel> MenuModel { get; set; }
        public virtual DbSet<MessageModel> MessageModel { get; set; }
        public virtual DbSet<NotificationModel> NotificationModel { get; set; }
        public virtual DbSet<OrderDetailModel> OrderDetailModel { get; set; }
        public virtual DbSet<OrderMasterModel> OrderMasterModel { get; set; }
        public virtual DbSet<OrderReturnDetailModel> OrderReturnDetailModel { get; set; }
        public virtual DbSet<OrderReturnModel> OrderReturnModel { get; set; }
        public virtual DbSet<OrderStatusModel> OrderStatusModel { get; set; }
        public virtual DbSet<OriginOfProductModel> OriginOfProductModel { get; set; }
        public virtual DbSet<PageLanguageModel> PageLanguageModel { get; set; }
        public virtual DbSet<PageModel> PageModel { get; set; }
        public virtual DbSet<PaymentMethodModel> PaymentMethodModel { get; set; }
        public virtual DbSet<PlanDetailModel> PlanDetailModel { get; set; }
        public virtual DbSet<PlanModel> PlanModel { get; set; }
        public virtual DbSet<PolicyModel> PolicyModel { get; set; }
        public virtual DbSet<PreImportDetailModel> PreImportDetailModel { get; set; }
        public virtual DbSet<PreImportMasterModel> PreImportMasterModel { get; set; }
        public virtual DbSet<PreOrderDetailModel> PreOrderDetailModel { get; set; }
        public virtual DbSet<PreOrderMasterModel> PreOrderMasterModel { get; set; }
        public virtual DbSet<ProductAlertModel> ProductAlertModel { get; set; }
        public virtual DbSet<ProductImageModel> ProductImageModel { get; set; }
        public virtual DbSet<ProductModel> ProductModel { get; set; }
        public virtual DbSet<ProductPriceModel> ProductPriceModel { get; set; }
        public virtual DbSet<ProductStatusModel> ProductStatusModel { get; set; }
        public virtual DbSet<ProductTypeModel> ProductTypeModel { get; set; }
        public virtual DbSet<ProductUpdateDetailModel> ProductUpdateDetailModel { get; set; }
        public virtual DbSet<ProductUpdateMasterModel> ProductUpdateMasterModel { get; set; }
        public virtual DbSet<ProvinceModel> ProvinceModel { get; set; }
        public virtual DbSet<RegistryModel> RegistryModel { get; set; }
        public virtual DbSet<ReturnDetailModel> ReturnDetailModel { get; set; }
        public virtual DbSet<ReturnMasterModel> ReturnMasterModel { get; set; }
        public virtual DbSet<RolesLanguageModel> RolesLanguageModel { get; set; }
        public virtual DbSet<RolesModel> RolesModel { get; set; }
        public virtual DbSet<SalaryDetailModel> SalaryDetailModel { get; set; }
        public virtual DbSet<SalaryMasterModel> SalaryMasterModel { get; set; }
        public virtual DbSet<StatusModel> StatusModel { get; set; }
        public virtual DbSet<StoreModel> StoreModel { get; set; }
        public virtual DbSet<SupplierModel> SupplierModel { get; set; }
        public virtual DbSet<SYS_tblFile> SYS_tblFile { get; set; }
        public virtual DbSet<SYS_tblFolder> SYS_tblFolder { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TrainerModel> TrainerModel { get; set; }
        public virtual DbSet<UnitModel> UnitModel { get; set; }
        public virtual DbSet<VATTypeModel> VATTypeModel { get; set; }
        public virtual DbSet<WarehouseInventoryDetailModel> WarehouseInventoryDetailModel { get; set; }
        public virtual DbSet<WarehouseInventoryMasterModel> WarehouseInventoryMasterModel { get; set; }
        public virtual DbSet<WarehouseModel> WarehouseModel { get; set; }
        public virtual DbSet<Website_AdsModel> Website_AdsModel { get; set; }
        public virtual DbSet<Website_Counter> Website_Counter { get; set; }
        public virtual DbSet<Website_LocationModel> Website_LocationModel { get; set; }
        public virtual DbSet<Website_NewsModel> Website_NewsModel { get; set; }
        public virtual DbSet<Website_SettingModel> Website_SettingModel { get; set; }
    
        public virtual int InsertCategory(string categoryName, string categoryNameEn, Nullable<int> orderBy, Nullable<int> parent, string description, string descriptionEn, string imageUrl, string sEOCategoryName, Nullable<bool> isHasChildren)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryNameEnParameter = categoryNameEn != null ?
                new ObjectParameter("CategoryNameEn", categoryNameEn) :
                new ObjectParameter("CategoryNameEn", typeof(string));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var descriptionEnParameter = descriptionEn != null ?
                new ObjectParameter("DescriptionEn", descriptionEn) :
                new ObjectParameter("DescriptionEn", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            var sEOCategoryNameParameter = sEOCategoryName != null ?
                new ObjectParameter("SEOCategoryName", sEOCategoryName) :
                new ObjectParameter("SEOCategoryName", typeof(string));
    
            var isHasChildrenParameter = isHasChildren.HasValue ?
                new ObjectParameter("isHasChildren", isHasChildren) :
                new ObjectParameter("isHasChildren", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCategory", categoryNameParameter, categoryNameEnParameter, orderByParameter, parentParameter, descriptionParameter, descriptionEnParameter, imageUrlParameter, sEOCategoryNameParameter, isHasChildrenParameter);
        }
    
        public virtual ObjectResult<QTHT_MenuModel_GetMenuByRolesId_Result> QTHT_MenuModel_GetMenuByRolesId(Nullable<int> rolesId, Nullable<int> languageId)
        {
            var rolesIdParameter = rolesId.HasValue ?
                new ObjectParameter("RolesId", rolesId) :
                new ObjectParameter("RolesId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QTHT_MenuModel_GetMenuByRolesId_Result>("QTHT_MenuModel_GetMenuByRolesId", rolesIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<QTHT_PageModel_GetPageByRolesId_Result> QTHT_PageModel_GetPageByRolesId(Nullable<int> rolesId, Nullable<int> languageId)
        {
            var rolesIdParameter = rolesId.HasValue ?
                new ObjectParameter("RolesId", rolesId) :
                new ObjectParameter("RolesId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QTHT_PageModel_GetPageByRolesId_Result>("QTHT_PageModel_GetPageByRolesId", rolesIdParameter, languageIdParameter);
        }
    
        public virtual int UpdateCategory(string categoryName, string categoryNameEn, Nullable<int> orderBy, Nullable<int> parent, string description, string descriptionEn, string imageUrl, string sEOCategoryName, Nullable<bool> isHasChildren, Nullable<int> categoryID, Nullable<bool> isDisplayOnHomePage, string keywords, string keywordsEn)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryNameEnParameter = categoryNameEn != null ?
                new ObjectParameter("CategoryNameEn", categoryNameEn) :
                new ObjectParameter("CategoryNameEn", typeof(string));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var parentParameter = parent.HasValue ?
                new ObjectParameter("Parent", parent) :
                new ObjectParameter("Parent", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var descriptionEnParameter = descriptionEn != null ?
                new ObjectParameter("DescriptionEn", descriptionEn) :
                new ObjectParameter("DescriptionEn", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            var sEOCategoryNameParameter = sEOCategoryName != null ?
                new ObjectParameter("SEOCategoryName", sEOCategoryName) :
                new ObjectParameter("SEOCategoryName", typeof(string));
    
            var isHasChildrenParameter = isHasChildren.HasValue ?
                new ObjectParameter("isHasChildren", isHasChildren) :
                new ObjectParameter("isHasChildren", typeof(bool));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var isDisplayOnHomePageParameter = isDisplayOnHomePage.HasValue ?
                new ObjectParameter("isDisplayOnHomePage", isDisplayOnHomePage) :
                new ObjectParameter("isDisplayOnHomePage", typeof(bool));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var keywordsEnParameter = keywordsEn != null ?
                new ObjectParameter("KeywordsEn", keywordsEn) :
                new ObjectParameter("KeywordsEn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCategory", categoryNameParameter, categoryNameEnParameter, orderByParameter, parentParameter, descriptionParameter, descriptionEnParameter, imageUrlParameter, sEOCategoryNameParameter, isHasChildrenParameter, categoryIDParameter, isDisplayOnHomePageParameter, keywordsParameter, keywordsEnParameter);
        }
    }
}
